texts:
  en: >-
    +++

    title = "Secrets"

    subtitle = "Kubernetes secrets by example"

    date = "2019-02-28"

    url = "/secrets/"

    +++
  ja: __COPY__
---
texts:
  en: >-
    You don't want sensitive information such as a database password or an

    API key kept around in clear text. Secrets provide you with a mechanism

    to use such information in a safe and reliable way with the following properties:
  ja: __COPY__
---
texts:
  en: Secrets are namespaced objects, that is, exist in the context of a namespace
  ja: __COPY__
---
texts:
  en: You can access them via a volume or an environment variable from a container running in a pod
  ja: __COPY__
---
texts:
  en: The secret data on nodes is stored in [tmpfs](https://www.kernel.org/doc/Documentation/filesystems/tmpfs.txt) volumes
  ja: __COPY__
---
texts:
  en: A per-secret size limit of 1MB exists
  ja: __COPY__
---
texts:
  en: The API server stores secrets as plaintext in etcd
  ja: __COPY__
---
texts:
  en: "Let's create a secret `apikey` that holds a (made-up) API key:"
  ja: __COPY__
---
texts:
  en: >-
    Now let's use the secret in a [pod](https://github.com/openshift-evangelists/kbe/blob/master/specs/secrets/pod.yaml)

    via a [volume](/volumes/):
  ja: __COPY__
---
texts:
  en: "If we now exec into the container we see the secret mounted at `/tmp/apikey`:"
  ja: __COPY__
---
texts:
  en: >-
    Note that for service accounts Kubernetes automatically creates secrets containing

    credentials for accessing the API and modifies your pods to use this type of secret.
  ja: __COPY__
---
texts:
  en: "You can remove both the pod and the secret with:"
  ja: __COPY__
---
texts:
  en: "[Previous](/volumes) | [Next](/logging)"
  ja: __COPY__

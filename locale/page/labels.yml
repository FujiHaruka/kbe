texts:
  en: >-
    +++

    title = "Labels"

    subtitle = "Kubernetes labels by example"

    date = "2019-02-27"

    url = "/labels/"

    +++
  ja: __COPY__
---
texts:
  en: >-
    Labels are the mechanism you use to organize Kubernetes objects. A label is a key-value

    pair with certain [restrictions](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#syntax-and-character-set)

    concerning length and allowed values but without any pre-defined meaning.

    So you're free to choose labels as you see fit, for example, to express

    environments such as 'this pod is running in production' or ownership,

    like 'department X owns that pod'.
  ja: __COPY__
---
texts:
  en: "Let's create a [pod](https://github.com/openshift-evangelists/kbe/blob/master/specs/labels/pod.yaml) that initially has one label (`env=development`):"
  ja: __COPY__
---
texts:
  en: >-
    In above `get pods` command note the `--show-labels` option that output the

    labels of an object in an additional column.
  ja: __COPY__
---
texts:
  en: "You can add a label to the pod as:"
  ja: __COPY__
---
texts:
  en: >-
    To use a label for filtering, for example to list only pods that have an

    `owner` that equals `michael`, use the `--selector` option:
  ja: __COPY__
---
texts:
  en: >-
    The `--selector` option can be abbreviated to `-l`, so to select pods that are

    labelled with `env=development`, do:
  ja: __COPY__
---
texts:
  en: >-
    Oftentimes, Kubernetes objects also support set-based selectors.

    Let's launch [another pod](https://github.com/openshift-evangelists/kbe/blob/master/specs/labels/anotherpod.yaml)

    that has two labels (`env=production` and `owner=michael`):
  ja: __COPY__
---
texts:
  en: >-
    Now, let's list all pods that are either labelled with `env=development` or with

    `env=production`:
  ja: __COPY__
---
texts:
  en: >-
    Other verbs also support label selection, for example, you could

    remove both of these pods with:
  ja: __COPY__
---
texts:
  en: Beware that this will destroy any pods with those labels.
  ja: __COPY__
---
texts:
  en: "You can also delete them directly, via their names, with:"
  ja: __COPY__
---
texts:
  en: >-
    Note that labels are not restricted to pods. In fact you can apply them to

    all sorts of objects, such as nodes or services.
  ja: __COPY__
---
texts:
  en: "[Previous](/pods) | [Next](/deployments)"
  ja: __COPY__
